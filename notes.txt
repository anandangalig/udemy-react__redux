JSX - a subset of JS that lets us write html within JS
JSX is a preprocessor step that adds XML syntax to JavaScript.
You can definitely use React without JSX but JSX makes React a lot more elegant.
Just like XML, JSX tags have a tag name, attributes, and children.
If an attribute value is enclosed in quotes, the value is a string.


 1. Component division can be done in any way. There is no secret sauce.
 2. Components can be nested!
 3. The modularity of components based on the functionality, is useful for re-using the same component.
 4. One component per FILE! No matter how small.

React VS Angular or Backbone: much less methods and structure to learn and use.


Working with Data/API:
* Follow the Data Down structure: the outer most component (parent) should call the data and pass it down.

function() is equal to =>
  -> aka ARROW functions
  -> fat arrow


-------------------------------------------------------------------------------

5/13/18 Session 2

Props - properties

* passed data from parent to child component
* everytime the parent is refreshed/state changes, the receiving child will get a new copy
* in Class based components, it will be available as this.props
* in Functional components, it will the available in the argument passed-in (e.g. props.videos)

key={vid.etag} --> had to be passed in when working with listed items. The reason is react is smart that to update only the necessary item if/when changed/updated. Otherwise, it will have to re-render everything since it has no idea which one to update. Similar to UUID. It could be any unique ID.


5/15/18
className="" --> in JSX transpiles into class=""

{video} is ES6 for const = props.video;  --> always use { } when working with JS var in ES6


5/16/18
Ask yourself before writing a component: "Do I need to maintain/work with any states for this component?"

NO - just use a simple Functional component

YES - use Class based component, for it has states

# for video_detail.js we do not need states. It will only read/display the data from props.
